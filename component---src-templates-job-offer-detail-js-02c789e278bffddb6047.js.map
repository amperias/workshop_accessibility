{"version":3,"file":"component---src-templates-job-offer-detail-js-02c789e278bffddb6047.js","mappings":"8OAGaA,EAAWC,EAAAA,QAAAA,IAAAA,WAAH,sEAAGA,CAAH,kkBAEC,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,aACzB,SAAAF,GAAK,OAAIA,EAAMC,MAAME,QAAa,SAAAH,GAAK,OAAIA,EAAMC,MAAME,QAC3D,SAAAH,GAAK,OAAIA,EAAMC,MAAMG,QAED,SAAAJ,GAAK,OAAIA,EAAMC,MAAMI,UACvC,SAAAL,GAAK,OAAIA,EAAMC,MAAMK,QAGH,SAAAN,GAAK,OAAIA,EAAMC,MAAMM,iBACvC,SAAAP,GAAK,OAAIA,EAAMC,MAAMK,QAGH,SAAAN,GAAK,OAAIA,EAAMC,MAAMO,QACvC,SAAAR,GAAK,OAAIA,EAAMC,MAAMG,QAGH,SAAAJ,GAAK,OAAIA,EAAMC,MAAMQ,SACvC,SAAAT,GAAK,OAAIA,EAAMC,MAAMK,QAQL,SAAAN,GAAK,OAAIA,EAAMC,MAAMC,aACtB,SAAAF,GAAK,OAAIA,EAAMC,MAAMS,SAOhB,SAAAV,GAAK,OAAIA,EAAMC,MAAMM,iBAIrB,SAAAP,GAAK,OAAIA,EAAMC,MAAMQ,SAM5CE,GAAUZ,EAAAA,EAAAA,SAAOa,EAAAA,MAAV,gFAAGb,CAAH,qCAKPc,EAA0Bd,EAAAA,QAAAA,IAAAA,WAAH,qFAAGA,CAAH,ytBAElB,SAAAC,GAAK,OAAIA,EAAMC,MAAMa,QAAa,SAAAd,GAAK,OAAIA,EAAMC,MAAMG,QAEvC,SAAAJ,GAAK,OAAIA,EAAMC,MAAMI,UACnC,SAAAL,GAAK,OAAIA,EAAMC,MAAMG,QAAa,SAAAJ,GAAK,OAAIA,EAAMC,MAAMK,QAGzC,SAAAN,GAAK,OAAIA,EAAMC,MAAMO,QACnC,SAAAR,GAAK,OAAIA,EAAMC,MAAMG,QAGP,SAAAJ,GAAK,OAAIA,EAAMC,MAAMQ,SACnC,SAAAT,GAAK,OAAIA,EAAMC,MAAMK,QAKL,SAAAN,GAAK,OAAIA,EAAMC,MAAMM,iBAOrB,SAAAP,GAAK,OAAIA,EAAMC,MAAMM,iBAU5C,SAAAP,GAAK,OAAIA,EAAMC,MAAMc,gBAOrB,SAAAf,GAAK,OAAIA,EAAMC,MAAMe,YAWrB,SAAAhB,GAAK,OAAIA,EAAMC,MAAMgB,SAGE,SAAAjB,GAAK,OAAIA,EAAMC,MAAMM,iBAGrB,SAAAP,GAAK,OAAIA,EAAMC,MAAMQ,U,wEC5DzD,UA9BuB,SAAC,GAAqB,IAAnBS,EAAkB,EAAlBA,YAChBC,EAA2BD,EAA3BC,SAAUC,EAAiBF,EAAjBE,aAUlB,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAKC,MAAOD,IACZ,gBAAC,KAAD,KACGD,EAASG,OAAOC,KAAI,SAACC,EAAMC,GAC1B,IAAMC,EAAMF,EAAKG,KACjB,MAAqB,OAAdH,EAAKG,KAdD,SAACH,EAAMI,GACxB,IAAIC,EAAmB,GAIvB,OAHAL,EAAKM,aAAaC,SAAQ,SAACC,EAASP,GAClCI,EAAiBI,KAAK,sBAAIC,IAAKT,GAAQO,OAElC,sBAAIE,IAAKN,GAAYC,GAUpBM,CAAWX,EAAMC,GAEjB,gBAACC,EAAD,CAAKQ,IAAKT,EAAOW,GAAIX,EAAOY,KAAMb,EAAKc,MACpCd,EAAKe","sources":["webpack://gatsby-starter-default/./src/components/JobOfferSection/JobOfferElements.js","webpack://gatsby-starter-default/./src/templates/JobOfferDetail.js"],"sourcesContent":["import { Link } from \"gatsby-plugin-react-i18next\"\nimport styled from \"styled-components\"\n\nexport const JobOffer = styled.div`\n  position: relative;\n  border: solid 1px ${props => props.theme.lightBlue};\n  padding: 48px ${props => props.theme.col1} 76px ${props => props.theme.col1};\n  margin: 0 ${props => props.theme.col4} 10em;\n\n  @media screen and (max-width: ${props => props.theme.laptop}) {\n    margin: 0 ${props => props.theme.col3} 10em;\n  }\n\n  @media screen and (max-width: ${props => props.theme.iPadLandscape}) {\n    margin: 0 ${props => props.theme.col3} 10em;\n  }\n\n  @media screen and (max-width: ${props => props.theme.iPad}) {\n    margin: 0 ${props => props.theme.col4} 10em;\n  }\n\n  @media screen and (max-width: ${props => props.theme.phone}) {\n    margin: 0 ${props => props.theme.col3} 10em;\n  }\n\n  &:after {\n    content: \"\";\n    position: absolute;\n    top: -1px;\n    right: -1px;\n    border-bottom: 63px solid ${props => props.theme.lightBlue};\n    border-right: 63px solid ${props => props.theme.white};\n  }\n\n  h1 {\n    padding: 40px 0 32px 0;\n    word-break: break-word;\n\n    @media screen and (max-width: ${props => props.theme.iPadLandscape}) {\n      padding: 24px 0 24px 0;\n    }\n\n    @media screen and (max-width: ${props => props.theme.phone}) {\n      padding: 12px 0 24px 0;\n    }\n  }\n`\n\nexport const JobLink = styled(Link)`\n  position: absolute;\n  bottom: -20px;\n`\n\nexport const JobOfferDetailContainer = styled.div`\n  white-space: pre-line;\n  padding: 60px ${props => props.theme.col5} 60px ${props => props.theme.col4};\n\n  @media screen and (max-width: ${props => props.theme.laptop}) {\n    padding: 60px ${props => props.theme.col4} 60px ${props => props.theme.col3};\n  }\n\n  @media screen and (max-width: ${props => props.theme.iPad}) {\n    padding: 40px ${props => props.theme.col4};\n  }\n\n  @media screen and (max-width: ${props => props.theme.phone}) {\n    padding: 30px ${props => props.theme.col3};\n  }\n\n  h1 {\n    margin: 70px 0 60px 0;\n    @media screen and (max-width: ${props => props.theme.iPadLandscape}) {\n      margin: 50px 0 30px 0;\n    }\n  }\n\n  h2 {\n    margin: 60px 0 30px 0;\n    @media screen and (max-width: ${props => props.theme.iPadLandscape}) {\n      margin: 50px 0 30px 0;\n    }\n  }\n\n  p {\n    margin: 0 0 10px 0;\n  }\n\n  a:hover {\n    color: ${props => props.theme.amperiasBlue} !important;\n  }\n\n  ul {\n    margin: 0 0 30px 30px;\n  }\n  a {\n    color: ${props => props.theme.darkBlue};\n    padding: 0 0 0 0;\n    font-size: 1.1rem;\n    display: inline-block;\n  }\n\n  li {\n    margin: 0;\n    font-size: 1.1rem;\n    line-height: 26px;\n    letter-spacing: 0.15px;\n    color: ${props => props.theme.black};\n    font-weight: 300;\n\n    @media screen and (max-width: ${props => props.theme.iPadLandscape}) {\n      letter-spacing: 0.13px;\n    }\n    @media screen and (max-width: ${props => props.theme.phone}) {\n      letter-spacing: 0px;\n    }\n  }\n`\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport { JobOfferDetailContainer } from \"../components/JobOfferSection/JobOfferElements\"\n\nexport const query = graphql`\n  query ($language: String!) {\n    locales: allLocale(\n      filter: { ns: { in: [\"navigation\"] }, language: { eq: $language } }\n    ) {\n      edges {\n        node {\n          ns\n          data\n          language\n        }\n      }\n    }\n  }\n`\n\nconst JobOfferDetail = ({ pageContext }) => {\n  const { jobOffer, sectionTitle } = pageContext\n\n  const renderList = (item, listIndex) => {\n    var listElementArray = []\n    item.listElements.forEach((element, index) => {\n      listElementArray.push(<li key={index}>{element}</li>)\n    })\n    return <ul key={listIndex}>{listElementArray}</ul>\n  }\n\n  return (\n    <Layout>\n      <Seo title={sectionTitle} />\n      <JobOfferDetailContainer>\n        {jobOffer.detail.map((item, index) => {\n          const Tag = item.type\n          return item.type === \"ul\" ? (\n            renderList(item, index)\n          ) : (\n            <Tag key={index} id={index} href={item.link}>\n              {item.text}\n            </Tag>\n          )\n        })}\n      </JobOfferDetailContainer>\n    </Layout>\n  )\n}\n\nexport default JobOfferDetail\n"],"names":["JobOffer","styled","props","theme","lightBlue","col1","col4","laptop","col3","iPadLandscape","iPad","phone","white","JobLink","Link","JobOfferDetailContainer","col5","amperiasBlue","darkBlue","black","pageContext","jobOffer","sectionTitle","title","detail","map","item","index","Tag","type","listIndex","listElementArray","listElements","forEach","element","push","key","renderList","id","href","link","text"],"sourceRoot":""}